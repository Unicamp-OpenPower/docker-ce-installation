#!/bin/bash
set -e

command -v wget >/dev/null 2>&1 || { echo >&2 "I require wget but it's not installed.  Aborting."; exit 1; }
command -v git >/dev/null 2>&1 || { echo >&2 "I require git but it's not installed.  Aborting."; exit 1; }

FTP="https://oplab9.parqtec.unicamp.br/pub/ppc64el/docker/"
PATTERN="[0-9][0-9]\.[0-9][0-9]\.[0-9]"
CONTENT=$(wget $FTP -q -O -)
VERSIONS=$(grep -o $PATTERN <<< $CONTENT | sort -u)
LATEST=$(grep $PATTERN <<< $VERSIONS | tr " " "\n" | tail -1)
VERSION=$LATEST

# GETTING HOST MACHINE'S DISTRO
case "$(hostnamectl | grep -oi 'Ubuntu 18\|Ubuntu 16\|Debian .* 9\|CentOS .* 7\|Red Hat .* 8' | head -1)" in
Ubuntu\ 18) DISTRO="bionic" ;;
Ubuntu\ 16) DISTRO="xenial" ;;
Debian\ *\ 9) DISTRO="stretch" ;;
CentOS\ *\ 7) DISTRO="centos7" ;;
Red\ Hat\ .*\ 8 DISTRO="rhel8" ;;
*)
	echo "Your distro is not supported or does not have any pre-built packages."
esac


# PROCESSING CLI PARAMETERS
version_set=false
while (( "$#" )); do
	case "$1" in
	-h|--help)
		shift
		echo "Usage: bash install_docker [ -l | -h | VERSION ]"
		echo "	Run the executable script using bash and specify the VERSION to be downloaded."
		echo "  If VERSION is not specified, the latest version will be downloaded."
		echo "	-l|--list	Will list all available versions."
		echo "	-h|--help	Will display this text."
		exit 0
      		;;
	-l|--list)
		shift
		echo "The following versions are available for download:"
		echo $(grep -o $PATTERN <<< $VERSIONS)
		exit 0
		;;
    	-*|--*=) # unsupported flags
     		echo "Error: Unsupported flag $1" >&2
      		exit 1
      		;;
    	*) # preserve positional arguments
		if $version_set; 
		then
			echo "Version was set multiple times (${VERSION} and ${1})."
			echo "Check the command's sytax."
		fi
		if [[ $VERSIONS != *"${1}"* ]]; 
		then
			echo "Version ${1} Inexistent or Unavailable..."
			echo "Try installing one of the following versions:"
			echo $(grep -o $PATTERN <<< $VERSIONS)
			exit 1
		else
			version_set=true
			VERSION=${1}
		fi
		shift
		;;
	esac
done


# CHECKING INSTALLATION PARAMETERS
APPENDIX=""
if [[ $VERSION == "${LATEST}" ]];
then
	APPENDIX="<latest>"
fi

printf "\n ===== [INSTALLATION PARAMETERS] >>>\n\n"
echo "DISTRO:   ${DISTRO}"
echo "VERSION:  ${VERSION} ${APPENDIX}"
printf "\n------------------------------------\n"


while true; do
    	read -p "Proceed with installation? [y/n] " yn
    	case $yn in
       		[Yy]* ) break;;
        	[Nn]* ) exit;;
    	esac
done


# Installation for UBUNTU distros
if [[ "bionic xenial" == *"${DISTRO}"* ]];
then
	DOCKER="docker-ce_${VERSION}~3-0~ubuntu-${DISTRO}_ppc64el.deb"
	DOCKER_CLI="docker-ce-cli_${VERSION}~3-0~ubuntu-${DISTRO}_ppc64el.deb"

	sudo apt update
	printf "\n============== [FETCHING PACKAGES] ===============\n"
	wget ${FTP}version-$VERSION/ubuntu-$DISTRO/$DOCKER_CLI
	wget ${FTP}version-$VERSION/ubuntu-$DISTRO/$DOCKER
	printf "\n============= [INSTALLING PACKAGES] ==============\n"
	sudo apt install -y --allow-downgrades ./$DOCKER_CLI
	sudo apt install -y --allow-downgrades ./$DOCKER
	rm $DOCKER $DOCKER_CLI
	printf "\n============ [CHECKING INSTALLATION] =============\n"
	sudo docker version | grep -B 2 version
	sudo docker run hello-world
	printf "\n====================== [DONE] ====================\n" 
	printf "Everything seems to be working fine\n"
	exit
fi

# Installation for CENTOS/RHEL distros
if [[ "centos7 rhel8" == *"${DISTRO}"* ]];
then
	DOCKER="docker-ce-${VERSION}-3.el7.ppc64le.rpm"
	DOCKER_CLI="docker-ce-cli-${VERSION}-3.el7.ppc64le.rpm"

	printf "\n============== [ADDING EPEL REPO] ================\n"
	sudo yum install -y epel-release wget
	sudo yum update -y

	printf "\n============== [FETCHING PACKAGES] ===============\n"
	wget ${FTP}version-${VERSION}/centos/$DOCKER_CLI
	wget ${FTP}version-${VERSION}/centos/$DOCKER

	printf "\n============= [INSTALLING PACKAGES] ==============\n"
	if [[ $VERSION < $(sudo docker --version | grep -o $PATTERN) ]];
	then
		echo "DOWNGRADING..."
		sudo yum downgrade -y ./$DOCKER
		sudo yum downgrade -y ./$DOCKER_CLI
	else
		sudo yum install -y ./$DOCKER_CLI
		sudo yum install -y ./$DOCKER
	fi

	rm $DOCKER_CLI $DOCKER
	sudo systemctl restart docker

	printf "\n============ [CHECKING INSTALLATION] =============\n"
	sudo docker version | grep -B 2 version
	sudo docker run hello-world
	printf "\n====================== [DONE] ====================\n" 
	printf "Everything seems to be working fine\n"

	exit
fi

# Installation for Debian distros
if [[ "stretch" == *"${DISTRO}"* ]];
then
	DOCKER="docker-ce_${VERSION}~3-0~debian-${DISTRO}_ppc64el.deb"
	DOCKER_CLI="docker-ce-cli_${VERSION}~3-0~debian-${DISTRO}_ppc64el.deb"
	CONTAINERD="containerd_1.3.3~ds1-2_ppc64el.deb"

	printf "\n================== [INSTALLING DEPENCIES] ====================\n" 
	if [[ $(apt policy libseccomp2 | grep -oP '(?<=Installed: )(.*)') < "2.4.2-2" ]];
	then
		wget http://ftp.us.debian.org/debian/pool/main/libs/libseccomp/libseccomp2_2.4.2-2_ppc64el.deb
		sudo apt install -y ./libseccomp2_2.4.2-2_ppc64el.deb
		rm libseccomp2_2.4.2-2_ppc64el.deb
	fi

	if [[ $(apt policy containerd | grep -oP '(?<=Installed: )(.*)') < "1.3" ]];
	then
		# GET DOWNLOAD LINK HERE: https://packages.debian.org/sid/ppc64el/containerd/download
		wget http://ftp.us.debian.org/debian/pool/main/c/containerd/$CONTAINERD
		sudo apt install -y ./$CONTAINERD
		rm $CONTAINERD
	fi

	if [[ $(apt policy runc | grep -oP '(?<=Installed: )(.*)') < "1.0.0~rc10+dfsg1-1" ]];
	then
		wget http://ftp.us.debian.org/debian/pool/main/r/runc/runc_1.0.0~rc10+dfsg1-1_ppc64el.deb
		sudo apt install -y ./runc_1.0.0~rc10+dfsg1-1_ppc64el.deb
		rm runc_1.0.0~rc10+dfsg1-1_ppc64el.deb
	fi

	printf "\n================ [FETCHING PACKAGES] ======================\n" 
	wget https://oplab9.parqtec.unicamp.br/pub/ppc64el/docker/version-${VERSION}/debian-${DISTRO}/$DOCKER_CLI
	wget https://oplab9.parqtec.unicamp.br/pub/ppc64el/docker/version-${VERSION}/debian-${DISTRO}/$DOCKER

	printf "\n================ [INSTALLING PACKAGES] ====================\n" 
	sudo apt install -y --allow-downgrades ./$DOCKER_CLI ./$DOCKER
	rm $DOCKER $DOCKER_CLI
	sudo systemctl restart docker

	printf "\n================ [CHECKING INSTALLATION] ==================\n" 
	sudo docker version | grep -B 2 version
	sudo docker run hello-world
	printf "\n========================= [DONE] ==========================\n" 
	printf "Everything seems to be working fine\n"

	exit
fi

